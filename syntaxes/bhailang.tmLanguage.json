{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BhaiLang",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#stdout"
		},
		{
			"include": "#identifier"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.bhailang",
					"match": "\\b(hi bhai|bye bhai|bhai ye hai|agar bhai|warna bhai|jab tak bhai|bas kar bhai|agla dekh bhai)\\b"
				},
				{
					"name": "keyword.other",
					"match": "\\b(sahi|galat|nalla)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.bhailang",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bhailang",
					"match": "\\\\."
				}
			]
		},
		"stdout" : {
			"name": "entity.name.function.stdout.bhailang",
			"match": "\\bbol bhai\\b"
		},
		"operators": {
			"name": "keyword.operator",
			"patterns": [
				{
					"match": "--",
					"name": "keyword.operator.decrement.bhailang"
				},
				{
					"match": "\\+\\+",
					"name": "keyword.operator.increment.bhailang"
				},
				{
					"match": "%=|\\+=|-=|\\*=|(?<!\\()/=",
					"name": "keyword.operator.assignment.compound.bhailang"
				},
				{
					"match": "&=|\\^=|<<=|>>=|\\|=",
					"name": "keyword.operator.assignment.compound.bitwise.bhailang"
				},
				{
					"match": "<<|>>",
					"name": "keyword.operator.bitwise.shift.bhailang"
				},
				{
					"match": "!=|<=|>=|==|<|>",
					"name": "keyword.operator.comparison.bhailang"
				},
				{
					"match": "&&|!|\\|\\|",
					"name": "keyword.operator.logical.bhailang"
				},
				{
					"match": "&|\\||\\^|~",
					"name": "keyword.operator.bhailang"
				},
				{
					"match": "=",
					"name": "keyword.operator.assignment.bhailang"
				},
				{
					"match": "%|\\*|/|-|\\+",
					"name": "keyword.operator.bhailang"
				}
			]
		},
		"numbers": {
			"match": "(?<!\\w)\\.?\\d(?:(?:[0-9a-zA-Z_\\.]|')|(?<=[eEpP])[+-])*",
			"captures": {
				"0": {
					"patterns": [
						{
							"begin": "(?=.)",
							"end": "$",
							"patterns": [
								{
									"match": "(\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9a-fA-F])\\.|\\.(?=[0-9a-fA-F])))([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?<!')([pP])(\\+?)(\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?([lLfF](?!\\w))?$",
									"captures": {
										"1": {
											"name": "keyword.other.unit.hexadecimal.bhailang"
										},
										"2": {
											"name": "constant.numeric.hexadecimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"3": {
											"name": "punctuation.separator.constant.numeric"
										},
										"4": {
											"name": "constant.numeric.hexadecimal.bhailang"
										},
										"5": {
											"name": "constant.numeric.hexadecimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"6": {
											"name": "punctuation.separator.constant.numeric"
										},
										"8": {
											"name": "keyword.other.unit.exponent.hexadecimal.bhailang"
										},
										"9": {
											"name": "keyword.operator.plus.exponent.hexadecimal.bhailang"
										},
										"10": {
											"name": "keyword.operator.minus.exponent.hexadecimal.bhailang"
										},
										"11": {
											"name": "constant.numeric.exponent.hexadecimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"12": {
											"name": "keyword.other.unit.suffix.floating-point.bhailang"
										}
									}
								},
								{
									"match": "(\\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9])\\.|\\.(?=[0-9])))([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?<!')([eE])(\\+?)(\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?([lLfF](?!\\w))?$",
									"captures": {
										"2": {
											"name": "constant.numeric.decimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"3": {
											"name": "punctuation.separator.constant.numeric"
										},
										"4": {
											"name": "constant.numeric.decimal.point.bhailang"
										},
										"5": {
											"name": "constant.numeric.decimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"6": {
											"name": "punctuation.separator.constant.numeric"
										},
										"8": {
											"name": "keyword.other.unit.exponent.decimal.bhailang"
										},
										"9": {
											"name": "keyword.operator.plus.exponent.decimal.bhailang"
										},
										"10": {
											"name": "keyword.operator.minus.exponent.decimal.bhailang"
										},
										"11": {
											"name": "constant.numeric.exponent.decimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"12": {
											"name": "keyword.other.unit.suffix.floating-point.bhailang"
										}
									}
								},
								{
									"match": "(\\G0[bB])([01](?:[01]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\\w))?$",
									"captures": {
										"1": {
											"name": "keyword.other.unit.binary.bhailang"
										},
										"2": {
											"name": "constant.numeric.binary.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"3": {
											"name": "punctuation.separator.constant.numeric"
										},
										"4": {
											"name": "keyword.other.unit.suffix.integer.bhailang"
										}
									}
								},
								{
									"match": "(\\G0)((?:[0-7]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))+)((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\\w))?$",
									"captures": {
										"1": {
											"name": "keyword.other.unit.octal.bhailang"
										},
										"2": {
											"name": "constant.numeric.octal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"3": {
											"name": "punctuation.separator.constant.numeric"
										},
										"4": {
											"name": "keyword.other.unit.suffix.integer.bhailang"
										}
									}
								},
								{
									"match": "(\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?<!')([pP])(\\+?)(\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\\w))?$",
									"captures": {
										"1": {
											"name": "keyword.other.unit.hexadecimal.bhailang"
										},
										"2": {
											"name": "constant.numeric.hexadecimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"3": {
											"name": "punctuation.separator.constant.numeric"
										},
										"5": {
											"name": "keyword.other.unit.exponent.hexadecimal.bhailang"
										},
										"6": {
											"name": "keyword.operator.plus.exponent.hexadecimal.bhailang"
										},
										"7": {
											"name": "keyword.operator.minus.exponent.hexadecimal.bhailang"
										},
										"8": {
											"name": "constant.numeric.exponent.hexadecimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"9": {
											"name": "keyword.other.unit.suffix.integer.bhailang"
										}
									}
								},
								{
									"match": "(\\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?<!')([eE])(\\+?)(\\-?)((?:[0-9](?:[0-9]|(?:(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\\w))?$",
									"captures": {
										"2": {
											"name": "constant.numeric.decimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"3": {
											"name": "punctuation.separator.constant.numeric"
										},
										"5": {
											"name": "keyword.other.unit.exponent.decimal.bhailang"
										},
										"6": {
											"name": "keyword.operator.plus.exponent.decimal.bhailang"
										},
										"7": {
											"name": "keyword.operator.minus.exponent.decimal.bhailang"
										},
										"8": {
											"name": "constant.numeric.exponent.decimal.bhailang",
											"patterns": [
												{
													"match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
													"name": "punctuation.separator.constant.numeric"
												}
											]
										},
										"9": {
											"name": "keyword.other.unit.suffix.integer.bhailang"
										}
									}
								},
								{
									"match": "(?:(?:[0-9a-zA-Z_\\.]|')|(?<=[eEpP])[+-])+",
									"name": "invalid.illegal.constant.numeric"
								}
							]
						}
					]
				}
			}
		},
		"identifier" :{
			"match": "([a-zA-Z_])[a-zA-Z0-9_]*",
			"name": "variable.name"
		},
		"comment": {
			"patterns": [
			  {
				"name": "comment.line.double-slash.bhailang",
				"begin": "(^[ \\t]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)",
				"end": "(?=$)",
				"beginCaptures": {
				  "0": {
					"name": "punctuation.definition.comment.bhailang"
				  }
				}
			  },
			  {
				"name": "comment.block.documentation.bhailang",
				"begin": "(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?",
				"end": "\\*/",
				"beginCaptures": {
				  "0": {
					"name": "punctuation.definition.comment.bhailang"
				  }
				}
			  }
			]
		  }
	},
	"scopeName": "source.bhai"
}